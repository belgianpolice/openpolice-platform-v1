<?php
/**
 * @version		$Id: editlinks.php 1121 2010-05-26 16:53:49Z johan $
 * @category   	Nooku
 * @package     Nooku_Administrator
 * @subpackage  Models
 * @copyright	Copyright (C) 2007 - 2010 Johan Janssens and Mathias Verraes. All rights reserved.
 * @license		GNU GPLv2 <http://www.gnu.org/licenses/old-licenses/gpl-2.0.html>
 * @link     	http://www.nooku.org
 */

/**
 * Nooku Editlinks Model
 *
 * @author		Mathias Verraes <mathias@joomlatools.org>
 * @category   	Nooku
 * @package     Nooku_Administrator
 * @subpackage  Models
 */
class NookuModelEditlinks extends KModelAbstract
{
    /**
     * Edit links
     */
    protected $_links;
    
	/**
	 * Guess the editlink for a specific table name (aka type)
	 *
	 * @return	string	Url
	 */
	public function guessLink()
	{
		if (!($type = $this->getState('type'))) {
			return '';
		}
		
		// guess component and view name
    	$parts = explode('_', $type, 2);
    	$component = $parts[0];
    	if(1==count($parts)) {
    		$view = $parts[0];
    	} else {
    		$view = $parts[1];
    	}
    	
    	// check if the component actually exists
    	$path = JPATH_ADMINISTRATOR.DS.'components';
    	if (!JFolder::exists($path.DS.'com_'.$component))
    	{
    		// try some variations
    		$singular 	= KInflector::singularize($component);
    		$plural		= KInflector::pluralize($component);
    		
    		if (JFolder::exists($path.DS.'com_'.$plural)) {
    			$component = $plural;
    		} elseif (JFolder::exists($path.DS.'com_'.$singular)) {
    			$component = $singular;
    		} else {
    			$component = 'UNKNOWN';
    		}
    	}
    	
    	// check if the view exists, here we try the singular first
		$path = JPATH_ADMINISTRATOR.DS.'components'.DS.'com_'.$component.DS.'views';
		$singular 	= KInflector::singularize($view);
    	if (JFolder::exists($path.DS.$singular)) {
    		$view = $singular;
    	} else 
    	{
    		$plural		= KInflector::pluralize($view);
    		if (JFolder::exists($path.DS.$view)) {
    			// no change
    		} elseif (JFolder::exists($path.DS.$plural)) {
    			$view = $plural;
    		} else {
    			$view = false;
    		}
    	}
    	
    	return "index.php?option=com_$component"
    			. ($view ? "&view=$view" : '')
    			. '&task=edit&cid[]={ID}';
    	
    	
	}

    /**
     * Get a list of tablename => links
     *
     * @return array
     */
    public function getLinks()
    {
        if(!isset($this->_links))
		{
			// Load all editlinks files
        	Koowa::import('lib.joomla.filesystem.folder');
			$filter = '\.php$';
        	$path = JPATH_COMPONENT.DS.'configs';
        	
        	foreach(JFolder::files($path.DS.'core', $filter, false, true) as $file) {
				include($file);
			}
			foreach(JFolder::files($path.DS.'user', $filter, false, true) as $file) {
				include($file);
			}
        }
		
        return $this->_links;
    }

	 /**
     * Add node links
     *
     * @param array List of node type => link
     */
    public function addLinks($array)
	{
    	$this->_links = array_merge( (array) $this->_links, $array);
    }
    
    /**
     * Get section by category ID
     * 
     * #__categories is shared by many components, so to edit a category you 
     * need to pass the name of the component. This method returns the section
     * or componentname of the specific category.
     *
     * @param	int		Category ID
     * @return 	string	Section/component name
     */
    public function getSectionByCatId($id)
    {
    	$db = KFactory::get('lib.joomla.database');
    	$query = $db->getQuery()
    				->select('section')
    				->from('categories')
    				->where('id', '=', $id);
    	$db->setQuery($query);
    	return $db->loadResult();
    }
	
	/**
	 * Send collected data to back
	 */
	public function send()
	{
		if($this->getState('sendtoserver'))
		{
			$type 		= $this->getState('type');
			$editlink 	= $this->getState('editlink');
			JUtility::sendMail('no_reply@nooku.org', 'Nooku', 'nooku_editlinks@gmail.com', $type, $this->getXML($type, $editlink));
		}
	}
	
	public function save()
	{
		$type 		= $this->getState('type');
		$editlink 	= $this->getState('editlink');
		$date 		= date(DATE_RFC850);
		$filename	= JPATH_COMPONENT.DS.'config'.DS.'user'.DS.$type.'.php';
		$contents 	= <<<EOT
<?php
// Generated by Nooku on $date
defined('_JEXEC') or die('Restricted access');
\$this->addLinks(array(
'$type' => '$editlink'
));
EOT;
	
		file_put_contents($filename, $contents);
	}
	
	public function getXML($type, $editlink)
	{
		$xml = <<<EOT
<?xml version="1.0" encoding="utf-8"?>
<editlinks>
	<editlink type="$type">
		$editlink
	</editlink>
</editlinks>
EOT;

		return $xml;
	}
	
    public function getDefaultState()
    {
        $state = parent::getDefaultState(); 
        
		$state['editlink']     = KInput::get('editlink', 'post', KFactory::tmp('admin::com.nooku.filter.editlink'));
		$state['sendtoserver'] =  KInput::get('sendtoserver', 'post', 'boolean');
		
		// we get $_POST['type'] twice, once to use as tablename, once to use for config/filename.php
		$state['type']  		= KInput::get('type', array('post', 'get'), KFactory::get('admin::com.nooku.filter.tablename'));
		$state['filename']      = KInput::get('type', 'post', KFactory::get('admin::com.nooku.filter.tablename'), 'filename');
        return $state;
    }

}